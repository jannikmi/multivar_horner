[tool.poetry]
name = "multivar_horner"
version = "3.1.0"
license = "MIT"
readme = "README.rst"
repository = "https://github.com/jannikmi/multivar_horner"
homepage = "https://multivar-horner.readthedocs.io/en/latest/"
documentation = "https://multivar-horner.readthedocs.io/en/latest/"
keywords = ["mathematics", "polynomials", "evaluation", "multivariate", "horner-scheme"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
]
description = "python package implementing a multivariate Horner scheme for efficiently evaluating multivariate polynomials"
authors = ["jannikmi <github@michelfe.it>"]
include = [
    ".editorconfig",
    ".pre-commit-config.yaml",
    "CHANGELOG.rst",
    "CONTRIBUTING.rst",
    "LICENSE",
    "Makefile",
    "README.rst",
    "tox.ini",
    "tests/*.py",
]
#exclude = ["scripts/*.py"]


[tool.poetry.dependencies]
python = ">=3.8,<4"
numpy = [
    { version = ">=1.21,<2", python = "<3.9" },
    { version = ">=1.23,<2", python = ">=3.9" }
]
numba = [
    { version = ">=0.56,<1", python = "<3.12", optional = true },
    { version = ">=0.59,<1", python = ">=3.12", optional = true }
]

[tool.poetry.extras]
numba = ["numba"]


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^5"
sphinx-rtd-theme = "^1"
sphinxcontrib-bibtex = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^7"
pytest-cov = "*"
tox = "*"
hypothesis = "^6.68.1"
twine = "*"
pre-commit = "*"
rstcheck = "*"
#build = "^0.8.0"
ruff = "^0.3.2"

[build-system]
requires = ["poetry-core>=1.0.7", "poetry==1.3.2"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
target-version = "py38"
src = ["multivar_horner", "tests"]

[tool.ruff.lint.isort]
known-local-folder = ["multivar_horner"]

[tool.tox]
legacy_tox_ini = """
    [tox]
    isolated_build = true
    envlist =
        docs,py{38,39,310,311,312}{,-numba}

    [gh-actions]
    python =
        3.8: py38{,-numba}
        3.9: py39{,-numba}
        3.10: py310{,-numba}
        3.11: py311{,-numba}
        3.12: py312{,-numba}


    [testenv:docs]
    description = build documentation
    basepython = python3.12
    allowlist_externals = poetry,sphinx-build
    commands =
      poetry install -v --with docs
      sphinx-build -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html
      python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'

    [testenv]
    allowlist_externals = poetry
    commands =
        !numba: poetry install -v
        numba:  poetry install -v --extras numba
        poetry run pytest {posargs}
"""
#
#[isort]
#;https://github.com/timothycrosley/isort/wiki/isort-Settings
#known_first_party = multivar_horner
#known_third_party = numpy, numba
#line_length = 120
#
#[tool.flake8]
#max_line_length = 120
#;trailing comma
#ignore = C819
